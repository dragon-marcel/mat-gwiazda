plugins {
    id 'java'
    alias(libs.plugins.spring.boot)
    alias(libs.plugins.spring.dependency.management)
}

group = 'java.pl'
version = '0.0.1-SNAPSHOT'
description = 'mat-gwiazda project for Spring Boot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(libs.jjwt.api)
    implementation(libs.mapstruct)
    implementation(libs.postgresql)
    implementation(libs.spring.boot.starter.data.jpa)
    implementation(libs.spring.boot.starter.security)
    implementation(libs.spring.boot.starter.validation)
    implementation(libs.spring.boot.starter.web)
    implementation(libs.spring.security.crypto)

    // JJWT runtime implementations
    runtimeOnly(libs.jjwt.impl)
    runtimeOnly(libs.jjwt.jackson)

    annotationProcessor(libs.mapstruct.processor)

    testImplementation(libs.spring.boot.starter.test)
    testRuntimeOnly(libs.junit.platform.launcher)

    // Unit test dependencies
    testImplementation('org.mockito:mockito-junit-jupiter:5.5.0')
    testImplementation('org.springframework.security:spring-security-test:6.2.2')

    // Integration test dependencies
    testImplementation('org.testcontainers:junit-jupiter:1.17.6')
    testImplementation('org.testcontainers:postgresql:1.17.6')
    testImplementation('com.github.tomakehurst:wiremock-jre8:2.35.0')
}

tasks.named('test') {
    useJUnitPlatform()
    // Configure test task to run with a single fork
    // Ensure Gradle uses only one test JVM to avoid Testcontainers conflicts across JVMs
    maxParallelForks = 1

    // Disable JUnit parallel execution to avoid Testcontainers conflicts between parallel test JVMs
    systemProperty "junit.jupiter.execution.parallel.enabled", "false"
}
